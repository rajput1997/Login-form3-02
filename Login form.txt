 database create able 
    

 create database LoginForm;

create table UserRegistration    
(    
 UserId int not null primary key identity(1,1),    
 Username varchar(150),    
 Pwd varchar(100));

 select * from UserRegistration


    
Login Controller

 using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using LoginForm.Models;

namespace LoginForm.Controllers
{
    public class LoginController : Controller
    {
        private readonly LoginDbContext _auc;

        public LoginController(LoginDbContext auc)
        {
            _auc = auc;
        }
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult Create()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Create(Login uc)
        {
            _auc.Add(uc);
            _auc.SaveChanges();
            ViewBag.message = "The user " + uc.Username + " is saved successfully";
            return View();
        }
    }
}

Login.cs

     using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.ComponentModel.DataAnnotations;

namespace LoginForm.Models
{
    public class Login
    {
        [Key]
        public int UserId { get; set; }

        [Required(ErrorMessage = "Please Enter Username..")]
        [Display(Name = "UserName")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Please Enter Password...")]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Pwd { get; set; }
    }
}


LoginDbContext
 
    using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace LoginForm.Models
{
    public class LoginDbContext :DbContext
    {
        public LoginDbContext(DbContextOptions<LoginDbContext> options) : base(options)
        {

        }
        public DbSet<Login> UserRegistration { get; set; }
    }
}



create view


  @model LoginForm.Models.Login

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Login Form</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control"  />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Pwd" class="control-label"></label>
                <input asp-for="Pwd" class="form-control" />
                <span asp-validation-for="Pwd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
                <input type="submit" value="cancel" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}



  stsrtup.cs
  
   public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllersWithViews();
            services.AddDbContext<LoginDbContext>(options => options.UseSqlServer(Configuration.GetConnectionString("Myconnection")));
        }


Appsetting .json

  {
  "ConnectionStrings": {
    "Myconnection": "Data Source=DESKTOP-TFBQ28G\\MSSQLSERVER1;Initial Catalog=LoginForm;Integrated Security=True"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}  

 Package 








